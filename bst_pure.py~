class Node:
    def __init__(self,item,left=None,right=None):
        self.item = item
        self.left = left
        self.right = right

    def __str__(self):
        return repr(self.item)


class BinarySearchTree:
    def __init__(self,root,left=None,right=None):
        self.root = Node(root)
        self.root.left = left
        self.root.right = right

    def insert(self,val):
        if self.root == None:
            self.root = Node(root)
        else:
            return self._insert(self.root,val)

    def _insert(self,curr,val):
        if curr.item > val and curr.left == None:
            node = Node(val)
            curr.left = node
        elif curr.item < val and curr.right == None:
            node = Node(val)
            curr.right = node
        else:
            if curr.item < val:
                return self._insert(curr.right,val)
            else:
                return self._insert(curr.left,val)
